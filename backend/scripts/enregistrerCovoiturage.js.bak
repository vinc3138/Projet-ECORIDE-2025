const { MongoClient } = require('mongodb');
const mysql = require('mysql2/promise');

const uri = 'mongodb+srv://administrateur:STUDI2025!@cluster0.ygqxdsj.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0';

async function enregistrerCovoiturage() {
  const client = new MongoClient(uri);
  let sqlConnection;

  try {
    // Connexion Mongo
    await client.connect();
    const db = client.db('plateforme_covoiturage');
    const mongoCovoiturages = db.collection('covoiturages');

    // Connexion SQL
    sqlConnection = await mysql.createConnection({
      host: '127.0.0.1',
      user: 'root',
      password: 'STUDI2025',
      database: 'ecoride',
      port: 3306,
    });

    // Récupérer les données SQL
    const [rows] = await sqlConnection.execute('SELECT * FROM covoiturage');

    // Supprimer les anciens docs Mongo
    await mongoCovoiturages.deleteMany({});

    // Adapter les données si besoin (exemple : convertir date en ISO string)
    const adaptedRows = rows.map(row => ({
      ...row,
      date: row.date ? new Date(row.date).toISOString() : new Date().toISOString()
    }));

    // Insérer les données SQL dans Mongo
    await mongoCovoiturages.insertMany(adaptedRows);

    console.log('Synchronisation SQL -> Mongo réussie');

  } catch (error) {
    console.error('Erreur lors de la synchronisation:', error);
  } finally {
    if (client) await client.close();
    if (sqlConnection) await sqlConnection.end();
  }
}

// Pour tester la synchronisation
syncSqlToMongo();
