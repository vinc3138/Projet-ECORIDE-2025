<?php

namespace App\Repository;

use App\Entity\Voiture;
use App\Entity\Utilisateur;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\Persistence\ManagerRegistry;

/**
 * @extends ServiceEntityRepository<Voiture>
 *
 * @method Voiture|null find($id, $lockMode = null, $lockVersion = null)
 * @method Voiture|null findOneBy(array $criteria, array $orderBy = null)
 * @method Voiture[]    findAll()
 * @method Voiture[]    findBy(array $criteria, array $orderBy = null, $limit = null, $offset = null)
 */
class VoitureRepository extends ServiceEntityRepository
{
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, Voiture::class);
    }

    /**
     * Récupère toutes les voitures appartenant à un utilisateur donné
     *
     * @param Utilisateur $user
     * @return Voiture[]
     */
    public function findByUtilisateur(Utilisateur $user): array
    {
        return $this->createQueryBuilder('v')
            ->andWhere('v.utilisateur = :user')
            ->setParameter('user', $user)
            ->orderBy('v.voiture_id', 'ASC')
            ->getQuery()
            ->getResult();
    }
	
	public function findOneByUtilisateurAndMarqueModele(Utilisateur $user, string $fullModele): ?Voiture
	{
		return $this->createQueryBuilder('v')
			->leftJoin('v.marque', 'm')
			->andWhere('v.utilisateur = :user')
			->andWhere("CONCAT(m.nom, ' ', v.modele) = :fullModele")
			->setParameter('user', $user)
			->setParameter('fullModele', $fullModele)
			->getQuery()
			->getOneOrNullResult();
	}

}
