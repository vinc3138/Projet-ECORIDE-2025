// 0. Imports externes
import React, { useState } from 'react';


// 1. √âtats locaux (valeurs du formulaire, chargement, erreurs, ...)
export default function MotDePasseOublie() {
  
  const [email, setEmail] = useState('');
  const [message, setMessage] = useState('');
  const [loading, setLoading] = useState(false);

  const handlePasswordResetRequest = async (e) => {
    e.preventDefault();
    setLoading(true);
    setMessage('');

 // 2. üîÅ useEffect : d√©clench√© au montage du composant (√©quivalent √† componentDidMount)
    try {
      const response = await fetch('https://127.0.0.1:8000/api/forgot_password', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ email }),
      });

      const data = await response.json();

      if (response.ok) {
        setMessage('Un lien de r√©initialisation du mot de passe a √©t√© envoy√© √† votre adresse email.');
      } else {
        setMessage(data.message || 'Erreur inconnue, veuillez r√©essayer.');
      }
    } catch (error) {
      setMessage('Une erreur est survenue. Veuillez r√©essayer plus tard.');
    } finally {
      setLoading(false);
    }
  };
  
// 2. useEffect : d√©clench√© au montage du composant
// 3. Fonction asynchrone pour charger des donn√©es au montage 
// 4. Fonction pour g√©rer l‚Äôenvoi du formulaire
// 5. Gestion de la modification de l'input
// 6. Affichage du composant
  return (
    <div className="container mt-5">
      <div className="row justify-content-center">
        <div className="col-md-6">
          <div className="card shadow rounded-4 p-4">
            <h3 className="text-center mb-4">Mot de passe oubli√©</h3>
			<h6 className="text-start fw-normal mb-4">
			  Veuillez renseigner votre email pour recevoir un lien permettant de r√©initialiser votre mot de passe.
			</h6>
            <form onSubmit={handlePasswordResetRequest}>
              <input
                type="email"
                className="form-control mb-3"
                value={email}
                onChange={e => setEmail(e.target.value)}
                placeholder="Votre email"
                required
              />
              <button type="submit" className="btn btn-success w-100" disabled={loading}>
                {loading ? 'Envoi...' : 'Envoyer'}
              </button>
            </form>

            {message && (
              <div className={`alert mt-3 ${message.includes('envoy√©') ? 'alert-success' : 'alert-danger'}`}>
                {message}
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}
